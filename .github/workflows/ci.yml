name: "swiftkube-client-ci"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  swiftformat-lint:
      runs-on: ubuntu-18.04
      steps:
      - uses: actions/checkout@v2
      - name: Install SwiftFormat
        uses: Cyberbeni/install-swift-tool@v2
        with:
          url: https://github.com/nicklockwood/SwiftFormat
      - name: Lint Sources
        run: swiftformat --lint Sources

  macOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    - name: Build
      run: swift build
    - name: Test
      run: swift test --skip K3d

  iOS:
    name: Test iOS
    runs-on: macOS-latest
    strategy:
      matrix:
        destination: ["platform=iOS Simulator,OS=16.0,name=iPhone 14 Pro"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      - name: iOS - ${{ matrix.destination }}
        run: set -o pipefail && xcodebuild -scheme SwiftkubeClient -destination "${{ matrix.destination }}" clean build | xcpretty

  linux:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    - name: Create cluster
      uses: AbsaOSS/k3d-action@v1.5.0
      with:
        cluster-name: "swiftkube"
        args: -c k3d/swiftkube.yaml
    - name: Setup Swift
      uses: fwal/setup-swift@v1
      with:
        swift-version: "5.5"
    - name: Build
      run: swift build
    - name: Test
      run: swift test
